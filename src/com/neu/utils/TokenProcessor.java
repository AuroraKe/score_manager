package com.neu.utils;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Random;

import sun.misc.BASE64Encoder;

/**
 * @author Petrichor
 *	通过此类生成一个令牌，用来防止表单重复提交
 */
public class TokenProcessor {
	/*
	 *单例设计模式（保证类的对象在内存中只有一个）
	 *1.把类的构造函数私有
	 *2.自己创建一个类的对象
	 *3.对外提供一个类的公共方法，返回类的对象
	 */
	private TokenProcessor() {}
	
	private static final TokenProcessor TOKEN_PROCESSOR = new TokenProcessor();
	
	public static TokenProcessor geTokenProcessor() {
		return TOKEN_PROCESSOR;
	}
	
	public String makeToken() {
//		new Random()
		String token = System.currentTimeMillis() + new Random().nextInt(999999999) + "";
		//数据指纹	128位	16个字节	MD5
		try {
			MessageDigest md = MessageDigest.getInstance("md5");
			byte[] md5 = md.digest(token.getBytes());
			//base64编码--任意二进制编码明文字符
			BASE64Encoder encoder = new BASE64Encoder();
			return encoder.encode(md5);
		} catch (NoSuchAlgorithmException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return token;
	}
}
